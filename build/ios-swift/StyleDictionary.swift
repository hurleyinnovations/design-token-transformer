
//
// StyleDictionary.swift
//

// Do not edit directly
// Generated on Fri, 27 Aug 2021 08:25:22 GMT


import UIKit

public class StyleDictionary {
    public static let colorColorAccentAccent1 = UIColor(red: 0.925, green: 0.698, blue: 0.949, alpha: 1)
    public static let colorColorAccentAccent128 = UIColor(red: 0.980, green: 0.914, blue: 0.984, alpha: 1)
    public static let colorColorAccentAccent2 = UIColor(red: 0.176, green: 0.416, blue: 0.416, alpha: 1)
    public static let colorColorAccentAccent210 = UIColor(red: 0.918, green: 0.941, blue: 0.941, alpha: 1)
    public static let colorColorAccentAccent3 = UIColor(red: 0.914, green: 0.678, blue: 0.549, alpha: 1)
    public static let colorColorAccentAccent323 = UIColor(red: 0.980, green: 0.925, blue: 0.898, alpha: 1)
    public static let colorColorAccentAccent4 = UIColor(red: 0.133, green: 0.094, blue: 0.455, alpha: 1)
    public static let colorColorAccentAccent410 = UIColor(red: 0.914, green: 0.910, blue: 0.945, alpha: 1)
    public static let colorColorAccentAccent5 = UIColor(red: 0.486, green: 0.776, blue: 0.839, alpha: 1)
    public static let colorColorAccentAccent525 = UIColor(red: 0.871, green: 0.945, blue: 0.961, alpha: 0.25)
    public static let colorColorAccentAccent6 = UIColor(red: 0.882, green: 0.376, blue: 0.302, alpha: 1)
    public static let colorColorAccentAccent615 = UIColor(red: 0.984, green: 0.906, blue: 0.894, alpha: 1)
    public static let colorColorActionNeutralActive = UIColor(red: 0.220, green: 0.231, blue: 0.318, alpha: 1)
    public static let colorColorActionNeutralActive20 = UIColor(red: 0.424, green: 0.455, blue: 0.498, alpha: 0.2)
    public static let colorColorActionNeutralDefault = UIColor(red: 0.565, green: 0.596, blue: 0.631, alpha: 1)
    public static let colorColorActionNeutralDisabled = UIColor(red: 0.871, green: 0.878, blue: 0.890, alpha: 1)
    public static let colorColorActionNeutralHover = UIColor(red: 0.522, green: 0.549, blue: 0.580, alpha: 1)
    public static let colorColorActionNeutralHover10 = UIColor(red: 0.427, green: 0.459, blue: 0.502, alpha: 0.1)
    public static let colorColorActionNeutralInverted = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorColorActionNeutralVisited = UIColor(red: 0.369, green: 0.220, blue: 0.729, alpha: 1)
    public static let colorColorActionPrimaryActive = UIColor(red: 0.000, green: 0.616, blue: 0.859, alpha: 1)
    public static let colorColorActionPrimaryActive20 = UIColor(red: 0.000, green: 0.392, blue: 0.549, alpha: 0.2)
    public static let colorColorActionPrimaryDefault = UIColor(red: 0.000, green: 0.392, blue: 0.549, alpha: 1)
    public static let colorColorActionPrimaryDisabled = UIColor(red: 0.702, green: 0.820, blue: 0.867, alpha: 1)
    public static let colorColorActionPrimaryHover = UIColor(red: 0.200, green: 0.514, blue: 0.639, alpha: 1)
    public static let colorColorActionPrimaryHover10 = UIColor(red: 0.212, green: 0.600, blue: 0.808, alpha: 0.1)
    public static let colorColorActionPrimaryInverted = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorColorActionPrimaryVisited = UIColor(red: 0.369, green: 0.220, blue: 0.729, alpha: 1)
    public static let colorColorActionSecondaryActive = UIColor(red: 0.467, green: 0.859, blue: 0.224, alpha: 1)
    public static let colorColorActionSecondaryActive20 = UIColor(red: 0.369, green: 0.745, blue: 0.137, alpha: 0.2)
    public static let colorColorActionSecondaryDefault = UIColor(red: 0.369, green: 0.745, blue: 0.137, alpha: 1)
    public static let colorColorActionSecondaryDisabled = UIColor(red: 0.812, green: 0.925, blue: 0.741, alpha: 1)
    public static let colorColorActionSecondaryHover = UIColor(red: 0.494, green: 0.796, blue: 0.310, alpha: 1)
    public static let colorColorActionSecondaryHover10 = UIColor(red: 0.467, green: 0.859, blue: 0.224, alpha: 0.1)
    public static let colorColorActionSecondaryInverted = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorColorActionSecondaryVisited = UIColor(red: 0.369, green: 0.220, blue: 0.729, alpha: 1)
    public static let colorColorBackgroundBrand = UIColor(red: 0.000, green: 0.616, blue: 0.859, alpha: 1)
    public static let colorColorBackgroundDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorColorBackgroundGrey = UIColor(red: 0.851, green: 0.855, blue: 0.886, alpha: 1)
    public static let colorColorBackgroundNationalBlue = UIColor(red: 0.000, green: 0.369, blue: 0.722, alpha: 1)
    public static let colorColorBackgroundSoftWhite = UIColor(red: 0.961, green: 0.965, blue: 0.980, alpha: 1)
    public static let colorColorNeutralBlack = UIColor(red: 0.137, green: 0.141, blue: 0.184, alpha: 1)
    public static let colorColorNeutralNeutral1 = UIColor(red: 0.169, green: 0.176, blue: 0.290, alpha: 1)
    public static let colorColorNeutralNeutral2 = UIColor(red: 0.220, green: 0.231, blue: 0.318, alpha: 1)
    public static let colorColorNeutralNeutral3 = UIColor(red: 0.329, green: 0.337, blue: 0.412, alpha: 1)
    public static let colorColorNeutralNeutral4 = UIColor(red: 0.424, green: 0.427, blue: 0.498, alpha: 1)
    public static let colorColorNeutralNeutral5 = UIColor(red: 0.522, green: 0.529, blue: 0.576, alpha: 1)
    public static let colorColorNeutralNeutral6 = UIColor(red: 0.639, green: 0.647, blue: 0.698, alpha: 1)
    public static let colorColorNeutralNeutral7 = UIColor(red: 0.851, green: 0.855, blue: 0.886, alpha: 1)
    public static let colorColorNeutralNeutral8 = UIColor(red: 0.925, green: 0.929, blue: 0.953, alpha: 1)
    public static let colorColorNeutralNeutral9 = UIColor(red: 0.961, green: 0.965, blue: 0.980, alpha: 1)
    public static let colorColorNeutralWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorColorPrimaryPrimary10 = UIColor(red: 0.902, green: 0.941, blue: 0.957, alpha: 1)
    public static let colorColorPrimaryPrimary100 = UIColor(red: 0.000, green: 0.388, blue: 0.541, alpha: 1)
    public static let colorColorPrimaryPrimary20 = UIColor(red: 0.800, green: 0.878, blue: 0.910, alpha: 1)
    public static let colorColorPrimaryPrimary30 = UIColor(red: 0.702, green: 0.820, blue: 0.867, alpha: 1)
    public static let colorColorPrimaryPrimary40 = UIColor(red: 0.600, green: 0.757, blue: 0.820, alpha: 1)
    public static let colorColorPrimaryPrimary50 = UIColor(red: 0.502, green: 0.698, blue: 0.776, alpha: 1)
    public static let colorColorPrimaryPrimary60 = UIColor(red: 0.400, green: 0.635, blue: 0.729, alpha: 1)
    public static let colorColorPrimaryPrimary70 = UIColor(red: 0.302, green: 0.576, blue: 0.686, alpha: 1)
    public static let colorColorPrimaryPrimary80 = UIColor(red: 0.200, green: 0.514, blue: 0.639, alpha: 1)
    public static let colorColorPrimaryPrimary90 = UIColor(red: 0.098, green: 0.459, blue: 0.604, alpha: 1)
    public static let colorColorSecondarySecondary10 = UIColor(red: 0.945, green: 0.984, blue: 0.922, alpha: 1)
    public static let colorColorSecondarySecondary100 = UIColor(red: 0.522, green: 0.875, blue: 0.302, alpha: 1)
    public static let colorColorSecondarySecondary20 = UIColor(red: 0.894, green: 0.973, blue: 0.843, alpha: 1)
    public static let colorColorSecondarySecondary30 = UIColor(red: 0.839, green: 0.957, blue: 0.769, alpha: 1)
    public static let colorColorSecondarySecondary40 = UIColor(red: 0.788, green: 0.945, blue: 0.690, alpha: 1)
    public static let colorColorSecondarySecondary50 = UIColor(red: 0.733, green: 0.929, blue: 0.612, alpha: 1)
    public static let colorColorSecondarySecondary60 = UIColor(red: 0.678, green: 0.914, blue: 0.533, alpha: 1)
    public static let colorColorSecondarySecondary70 = UIColor(red: 0.627, green: 0.902, blue: 0.455, alpha: 1)
    public static let colorColorSecondarySecondary80 = UIColor(red: 0.573, green: 0.886, blue: 0.380, alpha: 1)
    public static let colorColorSecondarySecondary90 = UIColor(red: 0.467, green: 0.859, blue: 0.224, alpha: 1)
    public static let colorColorStatusError = UIColor(red: 0.855, green: 0.078, blue: 0.078, alpha: 1)
    public static let colorColorStatusErrorBg = UIColor(red: 0.945, green: 0.863, blue: 0.863, alpha: 1)
    public static let colorColorStatusImportant = UIColor(red: 1.000, green: 0.796, blue: 0.000, alpha: 1)
    public static let colorColorStatusImportantBg = UIColor(red: 1.000, green: 0.918, blue: 0.600, alpha: 1)
    public static let colorColorStatusInfo = UIColor(red: 0.000, green: 0.616, blue: 0.859, alpha: 1)
    public static let colorColorStatusInfoBg = UIColor(red: 0.851, green: 0.957, blue: 1.000, alpha: 1)
    public static let colorColorStatusSuccess = UIColor(red: 0.000, green: 0.600, blue: 0.098, alpha: 1)
    public static let colorColorStatusSuccessBg = UIColor(red: 0.855, green: 0.914, blue: 0.863, alpha: 1)
    public static let colorColorStatusWarning = UIColor(red: 0.761, green: 0.329, blue: 0.000, alpha: 1)
    public static let colorColorStatusWarningBg = UIColor(red: 0.929, green: 0.886, blue: 0.855, alpha: 1)
    public static let effectEffectFluffyElevation1Color = rgba(0, 0, 0, 0.15)
    public static let effectEffectFluffyElevation1OffsetX = 0
    public static let effectEffectFluffyElevation1OffsetY = 5
    public static let effectEffectFluffyElevation1Radius = 15
    public static let effectEffectFluffyElevation1Spread = 0
    public static let effectEffectFluffyElevation1Type = dropShadow
    public static let effectEffectFluffyElevation2Color = rgba(0, 0, 0, 0.13)
    public static let effectEffectFluffyElevation2OffsetX = 0
    public static let effectEffectFluffyElevation2OffsetY = 6.25
    public static let effectEffectFluffyElevation2Radius = 20
    public static let effectEffectFluffyElevation2Spread = 0
    public static let effectEffectFluffyElevation2Type = dropShadow
    public static let effectEffectFluffyElevation3Color = rgba(0, 0, 0, 0.11)
    public static let effectEffectFluffyElevation3OffsetX = 0
    public static let effectEffectFluffyElevation3OffsetY = 10
    public static let effectEffectFluffyElevation3Radius = 30
    public static let effectEffectFluffyElevation3Spread = 0
    public static let effectEffectFluffyElevation3Type = dropShadow
    public static let effectEffectFluffyElevation4Color = rgba(0, 0, 0, 0.12)
    public static let effectEffectFluffyElevation4OffsetX = 0
    public static let effectEffectFluffyElevation4OffsetY = 10
    public static let effectEffectFluffyElevation4Radius = 35
    public static let effectEffectFluffyElevation4Spread = 0
    public static let effectEffectFluffyElevation4Type = dropShadow
    public static let effectEffectFluffyElevation5Color = rgba(0, 0, 0, 0.12)
    public static let effectEffectFluffyElevation5OffsetX = 0
    public static let effectEffectFluffyElevation5OffsetY = 15
    public static let effectEffectFluffyElevation5Radius = 60
    public static let effectEffectFluffyElevation5Spread = 0
    public static let effectEffectFluffyElevation5Type = dropShadow
    public static let effectEffectFluffyElevation6Color = rgba(0, 0, 0, 0.12)
    public static let effectEffectFluffyElevation6OffsetX = 0
    public static let effectEffectFluffyElevation6OffsetY = 17.5
    public static let effectEffectFluffyElevation6Radius = 70
    public static let effectEffectFluffyElevation6Spread = 0
    public static let effectEffectFluffyElevation6Type = dropShadow
    public static let effectEffectFluffyElevation7Color = rgba(0, 0, 0, 0.14)
    public static let effectEffectFluffyElevation7OffsetX = 0
    public static let effectEffectFluffyElevation7OffsetY = 35
    public static let effectEffectFluffyElevation7Radius = 90
    public static let effectEffectFluffyElevation7Spread = 0
    public static let effectEffectFluffyElevation7Type = dropShadow
    public static let effectEffectTightElevation1Color = rgba(0, 0, 0, 0.3)
    public static let effectEffectTightElevation1OffsetX = 0
    public static let effectEffectTightElevation1OffsetY = 1
    public static let effectEffectTightElevation1Radius = 3
    public static let effectEffectTightElevation1Spread = 0
    public static let effectEffectTightElevation1Type = dropShadow
    public static let effectEffectTightElevation2Color = rgba(0, 0, 0, 0.25)
    public static let effectEffectTightElevation2OffsetX = 0
    public static let effectEffectTightElevation2OffsetY = 1.25
    public static let effectEffectTightElevation2Radius = 4
    public static let effectEffectTightElevation2Spread = 0
    public static let effectEffectTightElevation2Type = dropShadow
    public static let effectEffectTightElevation3Color = rgba(0, 0, 0, 0.22)
    public static let effectEffectTightElevation3OffsetX = 0
    public static let effectEffectTightElevation3OffsetY = 2
    public static let effectEffectTightElevation3Radius = 6
    public static let effectEffectTightElevation3Spread = 0
    public static let effectEffectTightElevation3Type = dropShadow
    public static let effectEffectTightElevation4Color = rgba(0, 0, 0, 0.24)
    public static let effectEffectTightElevation4OffsetX = 0
    public static let effectEffectTightElevation4OffsetY = 2
    public static let effectEffectTightElevation4Radius = 7
    public static let effectEffectTightElevation4Spread = 0
    public static let effectEffectTightElevation4Type = dropShadow
    public static let effectEffectTightElevation5Color = rgba(0, 0, 0, 0.2)
    public static let effectEffectTightElevation5OffsetX = 0
    public static let effectEffectTightElevation5OffsetY = 3
    public static let effectEffectTightElevation5Radius = 12
    public static let effectEffectTightElevation5Spread = 0
    public static let effectEffectTightElevation5Type = dropShadow
    public static let effectEffectTightElevation6Color = rgba(0, 0, 0, 0.2)
    public static let effectEffectTightElevation6OffsetX = 0
    public static let effectEffectTightElevation6OffsetY = 3.5
    public static let effectEffectTightElevation6Radius = 14
    public static let effectEffectTightElevation6Spread = 0
    public static let effectEffectTightElevation6Type = dropShadow
    public static let effectEffectTightElevation7Color = rgba(0, 0, 0, 0.17)
    public static let effectEffectTightElevation7OffsetX = 0
    public static let effectEffectTightElevation7OffsetY = 7
    public static let effectEffectTightElevation7Radius = 18
    public static let effectEffectTightElevation7Spread = 0
    public static let effectEffectTightElevation7Type = dropShadow
    public static let effectEffectTightElevation8Color = rgba(0, 0, 0, 0.2)
    public static let effectEffectTightElevation8OffsetX = 0
    public static let effectEffectTightElevation8OffsetY = 12
    public static let effectEffectTightElevation8Radius = 28
    public static let effectEffectTightElevation8Spread = 0
    public static let effectEffectTightElevation8Type = dropShadow
    public static let effectEffectTightElevation9Color = rgba(0, 0, 0, 0.22)
    public static let effectEffectTightElevation9OffsetX = 0
    public static let effectEffectTightElevation9OffsetY = 13
    public static let effectEffectTightElevation9Radius = 36
    public static let effectEffectTightElevation9Spread = 0
    public static let effectEffectTightElevation9Type = dropShadow
    public static let gridGridCondensed0MobileAlignment = stretch
    public static let gridGridCondensed0MobileCount = 4
    public static let gridGridCondensed0MobileGutterSize = 24
    public static let gridGridCondensed0MobileOffset = 16
    public static let gridGridCondensed0MobilePattern = columns
    public static let gridGridCondensed1200Desktop0Alignment = center
    public static let gridGridCondensed1200Desktop0Count = 12
    public static let gridGridCondensed1200Desktop0GutterSize = 24
    public static let gridGridCondensed1200Desktop0Pattern = columns
    public static let gridGridCondensed1200Desktop0SectionSize = 74
    public static let gridGridCondensed1200Desktop1Alignment = stretch
    public static let gridGridCondensed1200Desktop1Count = 2
    public static let gridGridCondensed1200Desktop1GutterSize = 1200
    public static let gridGridCondensed1200Desktop1Offset = 0
    public static let gridGridCondensed1200Desktop1Pattern = columns
    public static let gridGridCondensed576TabletAlignment = stretch
    public static let gridGridCondensed576TabletCount = 6
    public static let gridGridCondensed576TabletGutterSize = 24
    public static let gridGridCondensed576TabletOffset = 24
    public static let gridGridCondensed576TabletPattern = columns
    public static let gridGridSpacious0MobileAlignment = stretch
    public static let gridGridSpacious0MobileCount = 4
    public static let gridGridSpacious0MobileGutterSize = 24
    public static let gridGridSpacious0MobileOffset = 24
    public static let gridGridSpacious0MobilePattern = columns
    public static let gridGridSpacious1200Desktop0Alignment = center
    public static let gridGridSpacious1200Desktop0Count = 12
    public static let gridGridSpacious1200Desktop0GutterSize = 48
    public static let gridGridSpacious1200Desktop0Pattern = columns
    public static let gridGridSpacious1200Desktop0SectionSize = 45
    public static let gridGridSpacious1200Desktop1Alignment = stretch
    public static let gridGridSpacious1200Desktop1Count = 2
    public static let gridGridSpacious1200Desktop1GutterSize = 1200
    public static let gridGridSpacious1200Desktop1Offset = 0
    public static let gridGridSpacious1200Desktop1Pattern = columns
    public static let gridGridSpacious576TabletAlignment = stretch
    public static let gridGridSpacious576TabletCount = 6
    public static let gridGridSpacious576TabletGutterSize = 32
    public static let gridGridSpacious576TabletOffset = 40
    public static let gridGridSpacious576TabletPattern = columns
}
